What happens when you initialize a repository? Why do you need to do it?

	When I initialize a repository, a hidden folder (.git) is created.
	There, the entire history of my project will be saved.
	I need to run the "git init" command whenever I create a new 
	project and I want to use github on it. (This is not necessary
	to do when I clone a project, as it already has a .git folder)


How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is different from the working directory in it's nature of "purgatory like place", when 
	the working directory is the hell and damnation where from the suffering and screaming of the damned 
	a piece of heaven is created, we first test these potential pieces of heaven just like Jesus said 
	about testing something through fire. This is why we need a staging area, so we won't mix any bad 
	things from hell into heaven. 
	It(the staging area) is also useful because it allows as to choose which/how many files we will update 
	in a single "commit".


How can you use the staging area to make sure you have one commit per logical change?

	I could only add the files I want to commit in the staging area, thus leaving the unrelated files
	to be commited alone or with the files that correspond to the same logical change.
	

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When I would like to add an experimental feature to my project, or when I'd like to have a paralel
	version of my project that might require other features(for example, an italian version aimed at 
	italian people)